# vim: et sw=4 ts=4 ft=zsh
# zinit plugins
# https://unix.stackexchange.com/questions/214657/what-does-zstyle-do
#
# https://github.com/zdharma/zinit#order-of-execution
# Order of execution of related Ice-mods: atinit -> atpull! -> make'!!' -> mv
# -> cp -> make! -> atclone/atpull -> make -> (plugin script loading) -> src ->
# multisrc -> atload.

zi ice lucid depth"1" multisrc="~/.dotfiles/.functions/*.zsh" pick"/dev/null"; \
    zi light ~/.dotfiles/.functions
zi snippet ~/.dotfiles/.aliases
# https://github.com/gpakosz/.tmux
zi ice lucid has"tmux" atclone"cp .tmux.conf ~/" atpull'%atclone';\
    zi light gpakosz/.tmux
zi ice lucid as"completion"; \
    zi snippet https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker
# Color output (auto set to 'no' on dumb terminals).
zstyle ':prezto:*:*' color 'yes'
# Disable color and theme in dumb terminals.
if [[ "$TERM" == 'dumb' ]]; then
    zstyle ':prezto:*:*' color 'no'
    zstyle ':prezto:module:prompt' theme 'off'
fi
zi snippet PZT::modules/helper
zi ice lucid atload'zstyle ":prezto:module:gnu-utility" prefix "g"'; \
    zi snippet PZT::modules/gnu-utility
zi snippet PZT::modules/environment
zi ice lucid atload'zstyle ":prezto:module:terminal" auto-title "yes"; \
    zstyle ":prezto:module:terminal:window-title" format "%n@%m: %s"; \
    zstyle ":prezto:module:terminal:tab-title" format "%m: %s"; \
    zstyle ":prezto:module:terminal:multiplexer-title" format "%s"'; \
    zi snippet PZT::modules/terminal
zi snippet PZT::modules/editor
## http://zsh.sourceforge.net/Guide/zshguide02.html#l18
zi ice lucid atload'HISTFILE="$HOME/.zhistory"; \
    setopt HIST_REDUCE_BLANKS; \
    setopt HIST_NO_STORE; \
    setopt HIST_NO_FUNCTIONS'; \
    zi snippet PZT::modules/history
zi snippet PZT::modules/directory
zi snippet PZT::modules/spectrum
zi ice lucid atload'zstyle ":prezto:module:utility:ls" color "yes"; \
    zstyle ":prezto:module:utility:diff" color "yes"; \
    zstyle ":prezto:module:utility:wdiff" color "yes"; \
    zstyle ":prezto:module:utility:make" color "yes"'; \
    zi snippet PZT::modules/utility
zi snippet PZT::modules/completion
zi ice lucid atload'zstyle ":prezto:module:tmux:auto-start" local "no"; \
    zstyle ":prezto:module:tmux:auto-start" remote "yes"'; \
    zi snippet PZT::modules/tmux
zi ice lucid atload'zstyle ":prezto:module:ruby:chruby" auto-switch "yes"'; \
    zi snippet PZT::modules/ruby
zi ice lucid atload'zstyle ":prezto:module:python" skip-virtualenvwrapper-init "on"; \
    zstyle ":prezto:module:python" conda-init "on"; \
    zstyle ":prezto:module:python:virtualenv" auto-switch "yes"; \
    zstyle ":prezto:module:python:virtualenv" initialize "no"'; \
    zi snippet PZT::modules/python
zi snippet PZT::modules/rsync
# https://github.com/romkatv/powerlevel10k
zi ice lucid depth'1'; zi light romkatv/powerlevel10k
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
zi ice lucid atclone"dircolors -b LS_COLORS > clrs.zsh" \
    atpull'%atclone' pick"clrs.zsh" \
    atload'zstyle ":completion:*" list-colors “${(s.:.)LS_COLORS}”'; \
    zinit light trapd00r/LS_COLORS
zi ice lucid as"null" has"kubectl" atclone'kubectl completion zsh > kbecmpl.zsh' \
    atpull'%atclone' src"kbecmpl.zsh" run-atpull; \
    zi light zdharma/null
zi ice lucid from"gh-r" as"program" mv"jq* -> jq"; \
    zi light stedolan/jq
zi ice lucid from"gh-r" as"program" mv"exa* -> exa"; \
    zi light ogham/exa
zi ice lucid from"gh-r" as"program" \
    atinit"export FZF_DEFAULT_OPTS='--height 40% --reverse \
    --border --inline-info --color=dark,bg+:235,hl+:10,pointer:5'"; \
    zi light junegunn/fzf-bin
zi ice lucid as"program" pick"bin/fzf-tmux" depth"1" \
    multisrc='shell/{completion,key-bindings}.zsh'; \
    zi light junegunn/fzf
zi ice lucid as"program" pick"bin/git-dsf"; \
    zi light zdharma/zsh-diff-so-fancy
zi ice lucid as'program' src'z.sh' reset'!'; \
    zi light rupa/z
zi ice lucid as"program" pick"bin/rbenv-doctor"; \
    zi light rbenv/rbenv-installer
zi ice lucid as"program" pick"bin/*"; \
    zi light rbenv/ruby-build
zi light supercrabtree/k
zi light rhuang2014/gpg-agent
zi light rhuang2014/brew
#zi ice lucid atclone'RBENV_ROOT="$PWD" ./libexec/rbenv init - > zrbenv.zsh' \
#    atinit'export RBENV_ROOT="$PWD"' atpull"%atclone" \
#    as'program' pick'bin/rbenv' src"zrbenv.zsh"; \
#    zi light rbenv/rbenv
#zi ice lucid atclone'PYENV_ROOT="$PWD" ./libexec/pyenv init - > zpyenv.zsh' \
#    atinit'export PYENV_ROOT="$PWD"' atpull"%atclone" \
#    as'program' pick'bin/pyenv' src"zpyenv.zsh"; \
#    zi light pyenv/pyenv
zi wait lucid for \
    atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
        zdharma/fast-syntax-highlighting \
    blockf \
        zsh-users/zsh-completions \
    atload"!_zsh_autosuggest_start" \
        zsh-users/zsh-autosuggestions
